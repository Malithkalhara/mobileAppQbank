{"version":3,"sources":["webpack:///./src/app/questionsadmin/questionsadmin.module.ts","webpack:///./src/app/questionsadmin/questionsadmin.page.html","webpack:///./src/app/questionsadmin/questionsadmin.page.scss","webpack:///./src/app/questionsadmin/questionsadmin.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACF;AACU;AACV;AACc;AAC3D,qDAAqD;AACT;AAE5C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,uEAAkB;KAC9B;CACF,CAAC;AAaF;IAAA;IAAuC,CAAC;IAA3B,wBAAwB;QAXpC,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,0DAAW;gBACX,uDAAU,CAAC,OAAO,EAAE;gBACpB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAE9B;YACD,YAAY,EAAE,CAAC,uEAAkB,CAAC;SACnC,CAAC;OACW,wBAAwB,CAAG;IAAD,+BAAC;CAAA;AAAH;;;;;;;;;;;;AC3BrC,oWAAoW,uBAAuB,wDAAwD,mBAAmB,oFAAoF,iBAAiB,sU;;;;;;;;;;;ACA3iB,+DAA+D,2J;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACa;AACtB;AAOzC;IAOE,4BAAoB,EAAkB,EAAS,MAAa;QAAxC,OAAE,GAAF,EAAE,CAAgB;QAAS,WAAM,GAAN,MAAM,CAAO;QAC1D,IAAI,CAAC,cAAc,EAAE,CAAC;IACvB,CAAC;IAEF,qCAAQ,GAAR;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,2CAAc,GAAd;QAAA,iBAKC;QAJC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,CAAC,SAAS,CAAC,cAAI;YACnC,KAAI,CAAC,SAAS,GAAC,IAAI,CAAC;YACpB,OAAO,CAAC,GAAG,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC;QAC9B,CAAC,CAAC;IACJ,CAAC;IAED,qCAAQ,GAAR,UAAS,QAAQ;QAAjB,iBAMC;QALC,IAAI,CAAC,EAAE,GAAC,QAAQ,CAAC,GAAG;QACpB,IAAI,CAAC,EAAE,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;YAC5C,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAClB,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,CAAC;IACJ,CAAC;IAED,oCAAO,GAAP;QACE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAhCU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,oHAAyC;;SAE1C,CAAC;yCAQuB,0EAAe,EAAgB,sDAAM;OAPjD,kBAAkB,CAiC9B;IAAD,yBAAC;CAAA;AAjC8B","file":"questionsadmin-questionsadmin-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\nimport { IonicModule } from '@ionic/angular';\nimport { QuestionsadminPage } from './questionsadmin.page';\n//import { GrdFilterPipe } from '../grd-filter.pipe';\nimport { PipeModule } from '../pipe.module';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: QuestionsadminPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PipeModule.forRoot(),\n    RouterModule.forChild(routes),\n    //QuestionsPageModule\n  ],\n  declarations: [QuestionsadminPage]\n})\nexport class QuestionsadminPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>questionsadmin</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <div>\\n    <div>\\n      <ion-toolbar>\\n        <ion-searchbar [(ngModel)]=\\\"searchText\\\"></ion-searchbar>\\n      </ion-toolbar>\\n    </div>\\n    <ion-card *ngFor=\\\"let question of questions | grdFilter: { language:searchText };\\\">\\n      <ion-card-header>\\n        <ion-card-title>{{question.question}}</ion-card-title>\\n      </ion-card-header>\\n      <ion-card-content>\\n        <p>{{question.answer}}</p>\\n        <ion-button size=\\\"small\\\" color=\\\"medium\\\">edit</ion-button>\\n        <ion-button size=\\\"small\\\" color=\\\"danger\\\" (click)=\\\"onDelete(question)\\\">delete</ion-button>\\n      </ion-card-content>   \\n    </ion-card>\\n  </div>\\n  <ion-button color=\\\"dark\\\" (click)=\\\"onClick()\\\">click</ion-button>\\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3F1ZXN0aW9uc2FkbWluL3F1ZXN0aW9uc2FkbWluLnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { QuestionService } from '../services/question.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-questionsadmin',\n  templateUrl: './questionsadmin.page.html',\n  styleUrls: ['./questionsadmin.page.scss'],\n})\nexport class QuestionsadminPage implements OnInit {\n\n\n  questions:any;\n  public searchText :any;\n  id:any;\n\n  constructor(private qs:QuestionService,private router:Router) {\n    this.getAllQustions();\n   }\n\n  ngOnInit() {\n    this.getAllQustions();\n  }\n\n  getAllQustions(){\n    this.qs.getQuestions().subscribe(data=>{\n      this.questions=data;\n      console.log(this.questions);\n    })\n  }\n\n  onDelete(question){\n    this.id=question._id\n    this.qs.deleteQuestion(this.id).subscribe(data=>{\n      console.log(data);\n      this.getAllQustions();\n    })\n  }\n\n  onClick(){\n    this.getAllQustions();\n  }\n}\n"],"sourceRoot":""}